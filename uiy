# 1、cellname函数
import xlrd
def cellname(rowx, colx):
    """
    将行号(rowx)和列号(colx)转换为Excel单元格名称(如A1)
    """
    # 创建一个列表来保存列号的每一位(针对多位数的情况，如AA,AB,...)
    col_letters = []
    while colx > 0:
        # 取当前位的值(0-25)，并转换为对应的字母
        col_letters.append(chr(65 + colx % 26))
        # 除以26取整数部分，用于下一轮循环
        colx //= 26
    # 反转列表以得到正确的顺序(如AB应为B在前，A在后)
    col_letters.reverse()
    # 将行号转换为字符串并拼接列号字符串，得到单元格名称
    return ''.join(col_letters) + str(rowx + 1)  # 行号从1开始
if __name__ == '__main__':
    # 读取Excel文件，可根据自身文件的实际路径做调整，如我的路径为：E:\360Downloads\test.xls
    workbook = xlrd.open_workbook(r'E:\360Downloads\test.xls')
    # sheet = workbook.sheet_by_index(0)  # 假设使用第一个工作表
    sheet = workbook.sheet_by_name('test1') # 也可以按名称指定要操作的工作表，注意，只需要指定工作表名，而不是带后缀的文件名
    # 假设我们要获取第2行第3列的单元格名称和内容
    rowx = 1  # 注意：行号在编程中通常从0开始，这里rowx=1，表示为引用工作表的第2行
    colx = 2  # 注意：列号在编程中通常从0开始，这里colx=2，表示为引用工作表的第3列
    # 获取单元格名称
    cell_name = cellname(rowx, colx)
    # 获取单元格内容
    cell_value = sheet.cell_value(rowx, colx)
    # 打印结果
    print(f"The name of the cell is: {cell_name}")
    print(f"The value of the cell is: {cell_value}")
